

Control flow statements:
   Controlling flow of execution


1) Sequence: Sequence of statements

2) Selection: if-else
    if <condition>:
        <body of if>

Python dont have brackets to define scope. 
It does the same with the help of indentation. (Block scope)

Below is the "C" language code:
if (x > 10)
    printf("Hello");
    if (y > 20)
        printf("Its a catch");
else
    printf("Caught");

Inputs: i)   x = 11, y = 10
        ii)  x = 11, y = 21
	iii) x = 9, y = 10
C 
language follows lexical scope. 
The 'else' in above code is associated with second 'if',
whereas in python 'else' is associated with outer 'if'.




Python supports multivalue assignment.
x,y=10,20   
 # Here 10 is assigned to x and 20 is assigned to y.
>>> x,y=10,20
>>> x
10
>>> y
20




WAP to accept two numbers and substract smaller one from larger number and print result.

WAP to accept 3 numbers and print max of them.

WAP to accept 3 numbers and print min of them.

Rewrite a string rotation code using if-else to print result (whether rotation or not).

WAP to accept sentence from user and "not that bad" string with "good".
e.g. input  --> Australiya played not that bad but still they lost.
     output --> Australiya played good but still they lost.

WAP to accept a string and perform verbing operation on it.
Rules: Length >= 3
       Add "ing" to its end if its not present.
       If its ending in "ing", "ing" shound be replaced by "ly".
       If length < 3 characters, leave it unchanged.

WAP to accept number of donuts:
	if (donuts > 10)
	    print: Number of donuts many
	if (donuts < 10)
	    print: Number of donuts <donut_count>

WAP to accept a string and return a string having first 2 and last 2 characters of input string.
e.g. Input: spring, Output: spng
>>> str1[:2]+str1[-2:]



